{"version":3,"file":"static/js/779.8f4a4692.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,iCACKC,EADL,iCACqCK,EADrC,gCADS,cAC1BH,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,oBACIP,EADJ,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,wLC7BfO,EAAeC,EAAAA,GAAAA,EAAH,6CAIZC,EAAgBD,EAAAA,GAAAA,QAAH,8C,SCwC1B,EAvCgB,WACd,IAAQJ,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBT,EAAAA,EAAAA,IAAgBF,GAHzC,OAGUa,EAHV,OAIIJ,EAAWI,GACXF,GAAa,GALjB,gDAOIG,EAAAA,GAAAA,MAAY,2CAPhB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACf,IACJ,IAAQgB,EAAYR,EAAZQ,QACR,OACE,UAACX,EAAD,WACGW,GAAWA,EAAQC,OAAS,GAC3B,wBACGD,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQnB,EAAkB,EAAlBA,GAAIoB,EAAc,EAAdA,QAC1B,OACE,2BACE,UAACjB,EAAD,sBAAuBgB,MACvB,uBAAIC,MAFGpB,EAKZ,OAGH,uEAEDU,IAAa,SAACW,EAAA,EAAD,MAGnB,C","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '5398a439423be7d8a0f98d6f3ba86ad0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ReviewAuthor = styled.p`\n  font-weight: 600;\n`;\n\nexport const ReviewSection = styled.section`\n  padding-top: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { getMovieReviews } from '../../api';\nimport { Loader } from 'components/Loader';\nimport { ReviewAuthor, ReviewSection } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function getActors() {\n      try {\n        setIsLoading(true);\n        const result = await getMovieReviews(id);\n        setReviews(result);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Something went wrong! Please try again.');\n      }\n    }\n    getActors();\n  }, [id]);\n  const { results } = reviews;\n  return (\n    <ReviewSection>\n      {results && results.length > 0 ? (\n        <ul>\n          {results.map(({ author, id, content }) => {\n            return (\n              <li key={id}>\n                <ReviewAuthor>Author: {author}</ReviewAuthor>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n      {isLoading && <Loader />}\n    </ReviewSection>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","ReviewAuthor","styled","ReviewSection","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","result","toast","getActors","results","length","map","author","content","Loader"],"sourceRoot":""}