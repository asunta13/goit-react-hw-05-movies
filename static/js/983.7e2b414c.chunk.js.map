{"version":3,"file":"static/js/983.7e2b414c.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,iCACKC,EADL,iCACqCK,EADrC,gCADS,cAC1BH,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,oBACIP,EADJ,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,wFC5BfO,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,YAA0B,IAAvBP,EAAsB,EAAtBA,GAAIQ,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaV,GAAMW,MAAO,CAAEC,KAAMP,GAA1C,SACGG,GAASC,KAFLT,EAMZ,OAIR,C,oICcD,UA5BiB,WACf,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEID,GAAa,GAFjB,UAG8BtB,EAAAA,EAAAA,MAH9B,gBAGYwB,EAHZ,EAGYA,QACRJ,EAAUI,GACVF,GAAa,GALjB,kDAOIG,EAAAA,GAAAA,MAAY,0CAPhB,2DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,KAGD,6BACE,4CACA,SAAC,IAAD,CAAYhB,OAAQA,IACnBW,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,MAGL,C","sources":["api.js","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '5398a439423be7d8a0f98d6f3ba86ad0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import toast, { Toaster } from 'react-hot-toast';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Something went wrong! Please try again');\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n      <Toaster />\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","MoviesList","movies","location","useLocation","map","title","name","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","results","toast","getMovies"],"sourceRoot":""}