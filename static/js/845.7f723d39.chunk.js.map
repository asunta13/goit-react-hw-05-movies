{"version":3,"file":"static/js/845.7f723d39.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '5398a439423be7d8a0f98d6f3ba86ad0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 8px;\n  margin-bottom: 8px;\n  color: #000000;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Info = styled.span`\n  font-weight: 400;\n  color: #000000;\n`;\n\nexport const AddInfo = styled.div`\n  border-top: 1px solid black;\n  padding-bottom: 15px;\n  border-bottom: 1px solid black;\n`;\n","import { useEffect, useState, useCallback, Suspense } from 'react';\nimport {\n  Outlet,\n  useParams,\n  useNavigate,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieById } from '../../api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Loader } from 'components/Loader';\nimport {\n  Button,\n  MovieCard,\n  Image,\n  Title,\n  Info,\n  AddInfo,\n} from './MovieDetailsPage.styled';\nimport poster from 'images/file_not_found.jpg';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        const result = await getMovieById(id);\n        setMovie(result);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Something went wrong! Please try again');\n      }\n    }\n    getMovie();\n  }, [id]);\n  const { title, poster_path, release_date, vote_average, genres, overview } =\n    movie;\n  const totalVoteAverage = 10;\n  const percent = (vote_average * 100) / totalVoteAverage;\n  const formateDate = dateString => {\n    const parsedDate = Date.parse(dateString);\n    return new Date(parsedDate).getFullYear();\n  };\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n  return (\n    <>\n      <Button onClick={goBack}>\n        <BsArrowLeftShort />\n        Go back\n      </Button>\n      <MovieCard>\n        <Image\n          src={poster_path ? `${BASE_IMG_URL}${poster_path}` : poster}\n          alt=\"Movie poster\"\n        />\n        <div>\n          <Title>\n            {title} ({formateDate(release_date)})\n          </Title>\n          <p>\n            User Score: <Info>{percent.toFixed()}%</Info>\n          </p>\n          <h2>Overview</h2>\n          <p> {overview}</p>\n          <h3>Genres </h3>\n          <p>{genres && genres.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </MovieCard>\n      <AddInfo>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </AddInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n\n      {isLoading && <Loader />}\n      <Toaster />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","Button","styled","MovieCard","Image","Title","Info","AddInfo","useParams","useState","movie","setMovie","isLoading","setIsLoading","navigate","useNavigate","from","useLocation","state","useEffect","result","toast","getMovie","title","poster_path","release_date","vote_average","genres","overview","percent","goBack","useCallback","onClick","src","poster","alt","dateString","parsedDate","Date","parse","getFullYear","formateDate","toFixed","map","genre","name","join","to","Suspense","fallback","Loader"],"sourceRoot":""}