{"version":3,"file":"static/js/387.236d38e4.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,iCACKC,EADL,iCACqCK,EADrC,gCADS,cAC1BH,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,oBACIP,EADJ,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,kBACVQ,EADU,4BACYP,EADZ,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,0LC7BfO,EAAcC,EAAAA,GAAAA,QAAH,8CAIXC,EAAQD,EAAAA,GAAAA,IAAH,sHAQLE,EAAQF,EAAAA,GAAAA,IAAH,8E,mBC2ClB,EA/Ca,WACX,IAAQJ,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBX,EAAAA,EAAAA,IAAgBD,GAHzC,OAGUc,EAHV,OAIIJ,EAAUI,GACVF,GAAa,GALjB,gDAOIG,EAAAA,GAAAA,MAAY,2CAPhB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAAChB,IACJ,IAAQiB,EAASR,EAATQ,KACR,OACE,UAACd,EAAD,WACGc,GAAQA,EAAKC,OAAS,GACrB,wBACGD,EAAKE,KAAI,YAA4C,IAAzCnB,EAAwC,EAAxCA,GAAIoB,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,2BACE,SAAChB,EAAD,WACE,SAACD,EAAD,CACEkB,IACEH,EAAY,UA9Bb,mCA8Ba,OAAqBA,GAAiBI,EAEpDC,IAAI,aAGR,uBAAIJ,KACJ,uCAAeC,OAVRtB,EAaZ,OAGH,mFAEDW,IAAa,SAACe,EAAA,EAAD,MAGnB,C","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '5398a439423be7d8a0f98d6f3ba86ad0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastSection = styled.section`\n  padding-top: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  object-fit: cover;\n`;\n\nexport const Thumb = styled.div`\n  display: block;\n  width: 132px;\n  height: 132px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { getMovieCredits } from '../../api';\nimport { Loader } from 'components/Loader';\nimport { Image, Thumb, CastSection } from './Cast.styled';\nimport poster from 'images/file_not_found.jpg';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function getActors() {\n      try {\n        setIsLoading(true);\n        const result = await getMovieCredits(id);\n        setActors(result);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Something went wrong! Please try again.');\n      }\n    }\n    getActors();\n  }, [id]);\n  const { cast } = actors;\n  return (\n    <CastSection>\n      {cast && cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <Thumb>\n                  <Image\n                    src={\n                      profile_path ? `${BASE_IMG_URL}${profile_path}` : poster\n                    }\n                    alt=\"Actor\"\n                  />\n                </Thumb>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div>We don't have information about cast for this movies.</div>\n      )}\n      {isLoading && <Loader />}\n    </CastSection>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","CastSection","styled","Image","Thumb","useParams","useState","actors","setActors","isLoading","setIsLoading","useEffect","result","toast","getActors","cast","length","map","profile_path","name","character","src","poster","alt","Loader"],"sourceRoot":""}